
AVRASM ver. 2.1.30  E:\Seventh term\Embedded Systems\Project  #2\Code\Debug\List\lcd sys Project 2.asm Thu Dec 21 11:48:46 2023

E:\Seventh term\Embedded Systems\Project  #2\Code\Debug\List\lcd sys Project 2.asm(1418): warning: Register r5 already defined by the .DEF directive
E:\Seventh term\Embedded Systems\Project  #2\Code\Debug\List\lcd sys Project 2.asm(1419): warning: Register r4 already defined by the .DEF directive
E:\Seventh term\Embedded Systems\Project  #2\Code\Debug\List\lcd sys Project 2.asm(1420): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V4.00a 
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003a 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6425
E:\Seventh term\Embedded Systems\Project  #2\Code\Debug\List\lcd sys Project 2.asm(1458): warning: .cseg .db misalignment - padding zero byte
000034 0000      	.DB  0x25,0x64,0x0
                 _0x2000003:
000035 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000036 0002      	.DW  0x02
000037 0160      	.DW  __base_y_G100
000038 006a      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000039 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003a 94f8      	CLI
                 
00003b 27ee      	CLR  R30
00003c bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00003d e0f1      	LDI  R31,1
00003e bffb      	OUT  GICR,R31
00003f bfeb      	OUT  GICR,R30
000040 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000041 e08d      	LDI  R24,(14-2)+1
000042 e0a2      	LDI  R26,2
000043 27bb      	CLR  R27
                 __CLEAR_REG:
000044 93ed      	ST   X+,R30
000045 958a      	DEC  R24
000046 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000047 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000048 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000049 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004a 93ed      	ST   X+,R30
00004b 9701      	SBIW R24,1
00004c f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00004d e6ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00004e e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00004f 9185      	LPM  R24,Z+
000050 9195      	LPM  R25,Z+
000051 9700      	SBIW R24,0
000052 f061      	BREQ __GLOBAL_INI_END
000053 91a5      	LPM  R26,Z+
000054 91b5      	LPM  R27,Z+
000055 9005      	LPM  R0,Z+
000056 9015      	LPM  R1,Z+
000057 01bf      	MOVW R22,R30
000058 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000059 9005      	LPM  R0,Z+
00005a 920d      	ST   X+,R0
00005b 9701      	SBIW R24,1
00005c f7e1      	BRNE __GLOBAL_INI_LOOP
00005d 01fb      	MOVW R30,R22
00005e cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00005f e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000060 bfed      	OUT  SPL,R30
000061 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000062 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000063 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000064 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000065 940c 00c5 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 
                 	.CSEG
                 _initializeHardware:
                 ; .FSTART _initializeHardware
000067 d003      	RCALL _initializeKeypad
000068 e1a0      	LDI  R26,LOW(16)
000069 d0df      	RCALL _lcd_init
00006a 9508      	RET
                 ; .FEND
                 _initializeKeypad:
                 ; .FSTART _initializeKeypad
00006b e0e7      	LDI  R30,LOW(7)
00006c bbe4      	OUT  0x14,R30
00006d efe8      	LDI  R30,LOW(248)
00006e bbe5      	OUT  0x15,R30
00006f 9508      	RET
                 ; .FEND
                 _keypad:
                 ; .FSTART _keypad
                 _0x3:
000070 98a8      	CBI  0x15,0
000071 9aa9      	SBI  0x15,1
000072 9aaa      	SBI  0x15,2
000073 b3e3      	IN   R30,0x13
000074 3fe6      	CPI  R30,LOW(0xF6)
000075 f421      	BRNE _0xF
                 _0x10:
000076 9b9b      	SBIS 0x13,3
000077 cffe      	RJMP _0x10
000078 e0e1      	LDI  R30,LOW(1)
000079 9508      	RET
                 _0xF:
00007a 3eee      	CPI  R30,LOW(0xEE)
00007b f421      	BRNE _0x13
                 _0x14:
00007c 9b9c      	SBIS 0x13,4
00007d cffe      	RJMP _0x14
00007e e0e4      	LDI  R30,LOW(4)
00007f 9508      	RET
                 _0x13:
000080 3dee      	CPI  R30,LOW(0xDE)
000081 f421      	BRNE _0x17
                 _0x18:
000082 9b9d      	SBIS 0x13,5
000083 cffe      	RJMP _0x18
000084 e0e7      	LDI  R30,LOW(7)
000085 9508      	RET
                 _0x17:
000086 3bee      	CPI  R30,LOW(0xBE)
000087 f421      	BRNE _0xE
                 _0x1C:
000088 9b9e      	SBIS 0x13,6
000089 cffe      	RJMP _0x1C
00008a e0ea      	LDI  R30,LOW(10)
00008b 9508      	RET
                 _0xE:
00008c 9aa8      	SBI  0x15,0
00008d 98a9      	CBI  0x15,1
00008e 9aaa      	SBI  0x15,2
00008f b3e3      	IN   R30,0x13
000090 3fe5      	CPI  R30,LOW(0xF5)
000091 f421      	BRNE _0x28
                 _0x29:
000092 9b9b      	SBIS 0x13,3
000093 cffe      	RJMP _0x29
000094 e0e2      	LDI  R30,LOW(2)
000095 9508      	RET
                 _0x28:
000096 3eed      	CPI  R30,LOW(0xED)
000097 f421      	BRNE _0x2C
                 _0x2D:
000098 9b9c      	SBIS 0x13,4
000099 cffe      	RJMP _0x2D
00009a e0e5      	LDI  R30,LOW(5)
00009b 9508      	RET
                 _0x2C:
00009c 3ded      	CPI  R30,LOW(0xDD)
00009d f421      	BRNE _0x30
                 _0x31:
00009e 9b9d      	SBIS 0x13,5
00009f cffe      	RJMP _0x31
0000a0 e0e8      	LDI  R30,LOW(8)
0000a1 9508      	RET
                 _0x30:
0000a2 3bed      	CPI  R30,LOW(0xBD)
0000a3 f421      	BRNE _0x27
                 _0x35:
0000a4 9b9e      	SBIS 0x13,6
0000a5 cffe      	RJMP _0x35
0000a6 e0e0      	LDI  R30,LOW(0)
0000a7 9508      	RET
                 _0x27:
0000a8 9aa8      	SBI  0x15,0
0000a9 9aa9      	SBI  0x15,1
0000aa 98aa      	CBI  0x15,2
0000ab b3e3      	IN   R30,0x13
0000ac 3fe3      	CPI  R30,LOW(0xF3)
0000ad f421      	BRNE _0x41
                 _0x42:
0000ae 9b9b      	SBIS 0x13,3
0000af cffe      	RJMP _0x42
0000b0 e0e3      	LDI  R30,LOW(3)
0000b1 9508      	RET
                 _0x41:
0000b2 3eeb      	CPI  R30,LOW(0xEB)
0000b3 f421      	BRNE _0x45
                 _0x46:
0000b4 9b9c      	SBIS 0x13,4
0000b5 cffe      	RJMP _0x46
0000b6 e0e6      	LDI  R30,LOW(6)
0000b7 9508      	RET
                 _0x45:
0000b8 3deb      	CPI  R30,LOW(0xDB)
0000b9 f421      	BRNE _0x49
                 _0x4A:
0000ba 9b9d      	SBIS 0x13,5
0000bb cffe      	RJMP _0x4A
0000bc e0e9      	LDI  R30,LOW(9)
0000bd 9508      	RET
                 _0x49:
0000be 3beb      	CPI  R30,LOW(0xBB)
0000bf f421      	BRNE _0x40
                 _0x4E:
0000c0 9b9e      	SBIS 0x13,6
0000c1 cffe      	RJMP _0x4E
0000c2 e0eb      	LDI  R30,LOW(11)
0000c3 9508      	RET
                 _0x40:
0000c4 cfab      	RJMP _0x3
                 ; .FEND
                 ;void main(void)
                 ; 0000 000C {
                 _main:
                 ; .FSTART _main
                 ; 0000 000D // Initialize Hardware
                 ; 0000 000E initializeHardware();
0000c5 dfa1      	RCALL _initializeHardware
                 ; 0000 000F 
                 ; 0000 0010 while (1)
                 _0x51:
                 ; 0000 0011 {
                 ; 0000 0012 int i;
                 ; 0000 0013 int input;
                 ; 0000 0014 
                 ; 0000 0015 for (i = 0; i <= 32; i++)
0000c6 9724      	SBIW R28,4
                 ;	i -> Y+2
                 ;	input -> Y+0
0000c7 e0e0      	LDI  R30,LOW(0)
0000c8 83ea      	STD  Y+2,R30
0000c9 83eb      	STD  Y+2+1,R30
                 _0x55:
0000ca 81aa      	LDD  R26,Y+2
0000cb 81bb      	LDD  R27,Y+2+1
0000cc 9791      	SBIW R26,33
0000cd f534      	BRGE _0x56
                 ; 0000 0016 {
                 ; 0000 0017 input = keypad();
0000ce dfa1      	RCALL _keypad
0000cf e0f0      	LDI  R31,0
0000d0 83e8      	ST   Y,R30
0000d1 83f9      	STD  Y+1,R31
                 ; 0000 0018 
                 ; 0000 0019 if (input == 10)
0000d2 81a8      	LD   R26,Y
0000d3 81b9      	LDD  R27,Y+1
0000d4 971a      	SBIW R26,10
0000d5 f419      	BRNE _0x57
                 ; 0000 001A lcd_putchar('*');
0000d6 e2aa      	LDI  R26,LOW(42)
0000d7 d05e      	RCALL _lcd_putchar
                 ; 0000 001B else if (input == 11)
0000d8 c015      	RJMP _0x58
                 _0x57:
0000d9 81a8      	LD   R26,Y
0000da 81b9      	LDD  R27,Y+1
0000db 971b      	SBIW R26,11
0000dc f419      	BRNE _0x59
                 ; 0000 001C lcd_putchar('#');
0000dd e2a3      	LDI  R26,LOW(35)
0000de d057      	RCALL _lcd_putchar
                 ; 0000 001D else
0000df c00e      	RJMP _0x5A
                 _0x59:
                 ; 0000 001E lcd_printf("%d", input);
                +
0000e0 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000e1 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000e2 93fa      	ST   -Y,R31
0000e3 93ea      	ST   -Y,R30
0000e4 81ea      	LDD  R30,Y+2
0000e5 81fb      	LDD  R31,Y+2+1
                +
0000e6 2f6f     +MOV R22 , R31
0000e7 0f66     +ADD R22 , R22
0000e8 0b66     +SBC R22 , R22
0000e9 2f76     +MOV R23 , R22
                 	__CWD1
0000ea d23d      	RCALL __PUTPARD1
0000eb e084      	LDI  R24,4
0000ec d1bd      	RCALL _lcd_printf
0000ed 9626      	ADIW R28,6
                 ; 0000 001F }
                 _0x5A:
                 _0x58:
0000ee 81ea      	LDD  R30,Y+2
0000ef 81fb      	LDD  R31,Y+2+1
0000f0 9631      	ADIW R30,1
0000f1 83ea      	STD  Y+2,R30
0000f2 83fb      	STD  Y+2+1,R31
0000f3 cfd6      	RJMP _0x55
                 _0x56:
                 ; 0000 0020 lcd_clear();
0000f4 d037      	RCALL _lcd_clear
                 ; 0000 0021 }
0000f5 9624      	ADIW R28,4
0000f6 cfcf      	RJMP _0x51
                 ; 0000 0022 }
                 _0x5B:
0000f7 cfff      	RJMP _0x5B
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000f8 931a      	ST   -Y,R17
0000f9 2f1a      	MOV  R17,R26
0000fa b3eb      	IN   R30,0x1B
0000fb 70ef      	ANDI R30,LOW(0xF)
0000fc 2fae      	MOV  R26,R30
0000fd 2fe1      	MOV  R30,R17
0000fe 7fe0      	ANDI R30,LOW(0xF0)
0000ff 2bea      	OR   R30,R26
000100 bbeb      	OUT  0x1B,R30
                +
000101 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000102 958a     +DEC R24
000103 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000104 9ada      	SBI  0x1B,2
                +
000105 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000106 958a     +DEC R24
000107 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000108 98da      	CBI  0x1B,2
                +
000109 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00010a 958a     +DEC R24
00010b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00010c c065      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00010d 93aa      	ST   -Y,R26
00010e 81a8      	LD   R26,Y
00010f dfe8      	RCALL __lcd_write_nibble_G100
000110 81e8          ld    r30,y
000111 95e2          swap  r30
000112 83e8          st    y,r30
000113 81a8      	LD   R26,Y
000114 dfe3      	RCALL __lcd_write_nibble_G100
                +
000115 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000116 958a     +DEC R24
000117 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000118 9621      	ADIW R28,1
000119 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
00011a 931a      	ST   -Y,R17
00011b 930a      	ST   -Y,R16
00011c 2f1a      	MOV  R17,R26
00011d 810a      	LDD  R16,Y+2
00011e 2fe1      	MOV  R30,R17
00011f e0f0      	LDI  R31,0
000120 5ae0      	SUBI R30,LOW(-__base_y_G100)
000121 4ffe      	SBCI R31,HIGH(-__base_y_G100)
000122 81e0      	LD   R30,Z
000123 0fe0      	ADD  R30,R16
000124 2fae      	MOV  R26,R30
000125 dfe7      	RCALL __lcd_write_data
000126 2e50      	MOV  R5,R16
000127 2e41      	MOV  R4,R17
000128 8119      	LDD  R17,Y+1
000129 8108      	LDD  R16,Y+0
00012a 9623      	ADIW R28,3
00012b 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00012c e0a2      	LDI  R26,LOW(2)
00012d d1bc      	RCALL SUBOPT_0x0
00012e e0ac      	LDI  R26,LOW(12)
00012f dfdd      	RCALL __lcd_write_data
000130 e0a1      	LDI  R26,LOW(1)
000131 d1b8      	RCALL SUBOPT_0x0
000132 e0e0      	LDI  R30,LOW(0)
000133 2e4e      	MOV  R4,R30
000134 2e5e      	MOV  R5,R30
000135 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000136 931a      	ST   -Y,R17
000137 2f1a      	MOV  R17,R26
000138 301a      	CPI  R17,10
000139 f011      	BREQ _0x2000005
00013a 1457      	CP   R5,R7
00013b f038      	BRLO _0x2000004
                 _0x2000005:
00013c e0e0      	LDI  R30,LOW(0)
00013d 93ea      	ST   -Y,R30
00013e 9443      	INC  R4
00013f 2da4      	MOV  R26,R4
000140 dfd9      	RCALL _lcd_gotoxy
000141 301a      	CPI  R17,10
000142 f179      	BREQ _0x2080001
                 _0x2000004:
000143 9453      	INC  R5
000144 9ad8      	SBI  0x1B,0
000145 2fa1      	MOV  R26,R17
000146 dfc6      	RCALL __lcd_write_data
000147 98d8      	CBI  0x1B,0
000148 c029      	RJMP _0x2080001
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000149 931a      	ST   -Y,R17
00014a 2f1a      	MOV  R17,R26
00014b b3ea      	IN   R30,0x1A
00014c 6fe0      	ORI  R30,LOW(0xF0)
00014d bbea      	OUT  0x1A,R30
00014e 9ad2      	SBI  0x1A,2
00014f 9ad0      	SBI  0x1A,0
000150 9ad1      	SBI  0x1A,1
000151 98da      	CBI  0x1B,2
000152 98d8      	CBI  0x1B,0
000153 98d9      	CBI  0x1B,1
000154 2e71      	MOV  R7,R17
000155 2fe1      	MOV  R30,R17
000156 58e0      	SUBI R30,-LOW(128)
                +
000157 93e0 0162+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000159 2fe1      	MOV  R30,R17
00015a 54e0      	SUBI R30,-LOW(192)
                +
00015b 93e0 0163+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
00015d e1a4      	LDI  R26,LOW(20)
00015e e0b0      	LDI  R27,0
00015f d1cd      	RCALL _delay_ms
000160 d18d      	RCALL SUBOPT_0x1
000161 d18c      	RCALL SUBOPT_0x1
000162 d18b      	RCALL SUBOPT_0x1
000163 e2a0      	LDI  R26,LOW(32)
000164 df93      	RCALL __lcd_write_nibble_G100
                +
000165 ec88     +LDI R24 , LOW ( 200 )
000166 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000167 9701     +SBIW R24 , 1
000168 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000169 e2a8      	LDI  R26,LOW(40)
00016a dfa2      	RCALL __lcd_write_data
00016b e0a4      	LDI  R26,LOW(4)
00016c dfa0      	RCALL __lcd_write_data
00016d e8a5      	LDI  R26,LOW(133)
00016e df9e      	RCALL __lcd_write_data
00016f e0a6      	LDI  R26,LOW(6)
000170 df9c      	RCALL __lcd_write_data
000171 dfba      	RCALL _lcd_clear
                 _0x2080001:
000172 9119      	LD   R17,Y+
000173 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 __print_G101:
                 ; .FSTART __print_G101
000174 93ba      	ST   -Y,R27
000175 93aa      	ST   -Y,R26
000176 9726      	SBIW R28,6
000177 d19a      	RCALL __SAVELOCR6
000178 e010      	LDI  R17,0
000179 85ac      	LDD  R26,Y+12
00017a 85bd      	LDD  R27,Y+12+1
00017b e0e0      	LDI  R30,LOW(0)
00017c e0f0      	LDI  R31,HIGH(0)
00017d 93ed      	ST   X+,R30
00017e 93fc      	ST   X,R31
                 _0x2020016:
00017f 89ea      	LDD  R30,Y+18
000180 89fb      	LDD  R31,Y+18+1
000181 9631      	ADIW R30,1
000182 8bea      	STD  Y+18,R30
000183 8bfb      	STD  Y+18+1,R31
000184 9731      	SBIW R30,1
000185 91e4      	LPM  R30,Z
000186 2f2e      	MOV  R18,R30
000187 30e0      	CPI  R30,0
000188 f409      	BRNE PC+2
000189 c10b      	RJMP _0x2020018
00018a 2fe1      	MOV  R30,R17
00018b 30e0      	CPI  R30,0
00018c f431      	BRNE _0x202001C
00018d 3225      	CPI  R18,37
00018e f411      	BRNE _0x202001D
00018f e011      	LDI  R17,LOW(1)
000190 c001      	RJMP _0x202001E
                 _0x202001D:
000191 d163      	RCALL SUBOPT_0x2
                 _0x202001E:
000192 c101      	RJMP _0x202001B
                 _0x202001C:
000193 30e1      	CPI  R30,LOW(0x1)
000194 f4a1      	BRNE _0x202001F
000195 3225      	CPI  R18,37
000196 f411      	BRNE _0x2020020
000197 d15d      	RCALL SUBOPT_0x2
000198 c0fa      	RJMP _0x20200CC
                 _0x2020020:
000199 e012      	LDI  R17,LOW(2)
00019a e040      	LDI  R20,LOW(0)
00019b e000      	LDI  R16,LOW(0)
00019c 322d      	CPI  R18,45
00019d f411      	BRNE _0x2020021
00019e e001      	LDI  R16,LOW(1)
00019f c0f4      	RJMP _0x202001B
                 _0x2020021:
0001a0 322b      	CPI  R18,43
0001a1 f411      	BRNE _0x2020022
0001a2 e24b      	LDI  R20,LOW(43)
0001a3 c0f0      	RJMP _0x202001B
                 _0x2020022:
0001a4 3220      	CPI  R18,32
0001a5 f411      	BRNE _0x2020023
0001a6 e240      	LDI  R20,LOW(32)
0001a7 c0ec      	RJMP _0x202001B
                 _0x2020023:
0001a8 c002      	RJMP _0x2020024
                 _0x202001F:
0001a9 30e2      	CPI  R30,LOW(0x2)
0001aa f439      	BRNE _0x2020025
                 _0x2020024:
0001ab e050      	LDI  R21,LOW(0)
0001ac e013      	LDI  R17,LOW(3)
0001ad 3320      	CPI  R18,48
0001ae f411      	BRNE _0x2020026
0001af 6800      	ORI  R16,LOW(128)
0001b0 c0e3      	RJMP _0x202001B
                 _0x2020026:
0001b1 c003      	RJMP _0x2020027
                 _0x2020025:
0001b2 30e3      	CPI  R30,LOW(0x3)
0001b3 f009      	BREQ PC+2
0001b4 c0df      	RJMP _0x202001B
                 _0x2020027:
0001b5 3320      	CPI  R18,48
0001b6 f010      	BRLO _0x202002A
0001b7 332a      	CPI  R18,58
0001b8 f008      	BRLO _0x202002B
                 _0x202002A:
0001b9 c007      	RJMP _0x2020029
                 _0x202002B:
0001ba e0aa      	LDI  R26,LOW(10)
0001bb 9f5a      	MUL  R21,R26
0001bc 2d50      	MOV  R21,R0
0001bd 2fe2      	MOV  R30,R18
0001be 53e0      	SUBI R30,LOW(48)
0001bf 0f5e      	ADD  R21,R30
0001c0 c0d3      	RJMP _0x202001B
                 _0x2020029:
0001c1 2fe2      	MOV  R30,R18
0001c2 36e3      	CPI  R30,LOW(0x63)
0001c3 f439      	BRNE _0x202002F
0001c4 d137      	RCALL SUBOPT_0x3
0001c5 89e8      	LDD  R30,Y+16
0001c6 89f9      	LDD  R31,Y+16+1
0001c7 81a4      	LDD  R26,Z+4
0001c8 93aa      	ST   -Y,R26
0001c9 d138      	RCALL SUBOPT_0x4
0001ca c0c8      	RJMP _0x2020030
                 _0x202002F:
0001cb 37e3      	CPI  R30,LOW(0x73)
0001cc f429      	BRNE _0x2020032
0001cd d12e      	RCALL SUBOPT_0x3
0001ce d139      	RCALL SUBOPT_0x5
0001cf d101      	RCALL _strlen
0001d0 2f1e      	MOV  R17,R30
0001d1 c007      	RJMP _0x2020033
                 _0x2020032:
0001d2 37e0      	CPI  R30,LOW(0x70)
0001d3 f449      	BRNE _0x2020035
0001d4 d127      	RCALL SUBOPT_0x3
0001d5 d132      	RCALL SUBOPT_0x5
0001d6 d106      	RCALL _strlenf
0001d7 2f1e      	MOV  R17,R30
0001d8 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0001d9 6002      	ORI  R16,LOW(2)
0001da 770f      	ANDI R16,LOW(127)
0001db e030      	LDI  R19,LOW(0)
0001dc c03a      	RJMP _0x2020036
                 _0x2020035:
0001dd 36e4      	CPI  R30,LOW(0x64)
0001de f011      	BREQ _0x2020039
0001df 36e9      	CPI  R30,LOW(0x69)
0001e0 f411      	BRNE _0x202003A
                 _0x2020039:
0001e1 6004      	ORI  R16,LOW(4)
0001e2 c002      	RJMP _0x202003B
                 _0x202003A:
0001e3 37e5      	CPI  R30,LOW(0x75)
0001e4 f431      	BRNE _0x202003C
                 _0x202003B:
0001e5 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
0001e6 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0001e7 83ee      	STD  Y+6,R30
0001e8 83ff      	STD  Y+6+1,R31
0001e9 e015      	LDI  R17,LOW(5)
0001ea c00c      	RJMP _0x202003D
                 _0x202003C:
0001eb 35e8      	CPI  R30,LOW(0x58)
0001ec f411      	BRNE _0x202003F
0001ed 6008      	ORI  R16,LOW(8)
0001ee c003      	RJMP _0x2020040
                 _0x202003F:
0001ef 37e8      	CPI  R30,LOW(0x78)
0001f0 f009      	BREQ PC+2
0001f1 c0a1      	RJMP _0x2020071
                 _0x2020040:
0001f2 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
0001f3 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
0001f4 83ee      	STD  Y+6,R30
0001f5 83ff      	STD  Y+6+1,R31
0001f6 e014      	LDI  R17,LOW(4)
                 _0x202003D:
0001f7 ff02      	SBRS R16,2
0001f8 c015      	RJMP _0x2020042
0001f9 d102      	RCALL SUBOPT_0x3
0001fa 89a8      	LDD  R26,Y+16
0001fb 89b9      	LDD  R27,Y+16+1
0001fc 9614      	ADIW R26,4
0001fd 91ed      	LD   R30,X+
0001fe 91fd      	LD   R31,X+
0001ff 87ea      	STD  Y+10,R30
000200 87fb      	STD  Y+10+1,R31
000201 85ab      	LDD  R26,Y+11
000202 23aa      	TST  R26
000203 f422      	BRPL _0x2020043
000204 d11b      	RCALL __ANEGW1
000205 87ea      	STD  Y+10,R30
000206 87fb      	STD  Y+10+1,R31
000207 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000208 3040      	CPI  R20,0
000209 f011      	BREQ _0x2020044
00020a 5f1f      	SUBI R17,-LOW(1)
00020b c001      	RJMP _0x2020045
                 _0x2020044:
00020c 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00020d c009      	RJMP _0x2020046
                 _0x2020042:
00020e d0ed      	RCALL SUBOPT_0x3
00020f 89a8      	LDD  R26,Y+16
000210 89b9      	LDD  R27,Y+16+1
000211 9614      	ADIW R26,4
                +
000212 91ed     +LD R30 , X +
000213 91fc     +LD R31 , X
000214 9711     +SBIW R26 , 1
                 	__GETW1P
000215 87ea      	STD  Y+10,R30
000216 87fb      	STD  Y+10+1,R31
                 _0x2020046:
                 _0x2020036:
000217 fd00      	SBRC R16,0
000218 c010      	RJMP _0x2020047
                 _0x2020048:
000219 1715      	CP   R17,R21
00021a f470      	BRSH _0x202004A
00021b ff07      	SBRS R16,7
00021c c008      	RJMP _0x202004B
00021d ff02      	SBRS R16,2
00021e c004      	RJMP _0x202004C
00021f 7f0b      	ANDI R16,LOW(251)
000220 2f24      	MOV  R18,R20
000221 5011      	SUBI R17,LOW(1)
000222 c001      	RJMP _0x202004D
                 _0x202004C:
000223 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000224 c001      	RJMP _0x202004E
                 _0x202004B:
000225 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000226 d0ce      	RCALL SUBOPT_0x2
000227 5051      	SUBI R21,LOW(1)
000228 cff0      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000229 2f31      	MOV  R19,R17
00022a ff01      	SBRS R16,1
00022b c016      	RJMP _0x202004F
                 _0x2020050:
00022c 3030      	CPI  R19,0
00022d f099      	BREQ _0x2020052
00022e ff03      	SBRS R16,3
00022f c006      	RJMP _0x2020053
000230 81ee      	LDD  R30,Y+6
000231 81ff      	LDD  R31,Y+6+1
000232 9125      	LPM  R18,Z+
000233 83ee      	STD  Y+6,R30
000234 83ff      	STD  Y+6+1,R31
000235 c005      	RJMP _0x2020054
                 _0x2020053:
000236 81ae      	LDD  R26,Y+6
000237 81bf      	LDD  R27,Y+6+1
000238 912d      	LD   R18,X+
000239 83ae      	STD  Y+6,R26
00023a 83bf      	STD  Y+6+1,R27
                 _0x2020054:
00023b d0b9      	RCALL SUBOPT_0x2
00023c 3050      	CPI  R21,0
00023d f009      	BREQ _0x2020055
00023e 5051      	SUBI R21,LOW(1)
                 _0x2020055:
00023f 5031      	SUBI R19,LOW(1)
000240 cfeb      	RJMP _0x2020050
                 _0x2020052:
000241 c048      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000242 e320      	LDI  R18,LOW(48)
000243 81ee      	LDD  R30,Y+6
000244 81ff      	LDD  R31,Y+6+1
000245 d0de      	RCALL __GETW1PF
000246 87e8      	STD  Y+8,R30
000247 87f9      	STD  Y+8+1,R31
000248 81ee      	LDD  R30,Y+6
000249 81ff      	LDD  R31,Y+6+1
00024a 9632      	ADIW R30,2
00024b 83ee      	STD  Y+6,R30
00024c 83ff      	STD  Y+6+1,R31
                 _0x202005A:
00024d 85e8      	LDD  R30,Y+8
00024e 85f9      	LDD  R31,Y+8+1
00024f 85aa      	LDD  R26,Y+10
000250 85bb      	LDD  R27,Y+10+1
000251 17ae      	CP   R26,R30
000252 07bf      	CPC  R27,R31
000253 f050      	BRLO _0x202005C
000254 5f2f      	SUBI R18,-LOW(1)
000255 85a8      	LDD  R26,Y+8
000256 85b9      	LDD  R27,Y+8+1
000257 85ea      	LDD  R30,Y+10
000258 85fb      	LDD  R31,Y+10+1
000259 1bea      	SUB  R30,R26
00025a 0bfb      	SBC  R31,R27
00025b 87ea      	STD  Y+10,R30
00025c 87fb      	STD  Y+10+1,R31
00025d cfef      	RJMP _0x202005A
                 _0x202005C:
00025e 332a      	CPI  R18,58
00025f f028      	BRLO _0x202005D
000260 ff03      	SBRS R16,3
000261 c002      	RJMP _0x202005E
000262 5f29      	SUBI R18,-LOW(7)
000263 c001      	RJMP _0x202005F
                 _0x202005E:
000264 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000265 fd04      	SBRC R16,4
000266 c019      	RJMP _0x2020061
000267 3321      	CPI  R18,49
000268 f420      	BRSH _0x2020063
000269 85a8      	LDD  R26,Y+8
00026a 85b9      	LDD  R27,Y+8+1
00026b 9711      	SBIW R26,1
00026c f409      	BRNE _0x2020062
                 _0x2020063:
00026d c009      	RJMP _0x20200CD
                 _0x2020062:
00026e 1753      	CP   R21,R19
00026f f010      	BRLO _0x2020067
000270 ff00      	SBRS R16,0
000271 c001      	RJMP _0x2020068
                 _0x2020067:
000272 c011      	RJMP _0x2020066
                 _0x2020068:
000273 e220      	LDI  R18,LOW(32)
000274 ff07      	SBRS R16,7
000275 c00a      	RJMP _0x2020069
000276 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000277 6100      	ORI  R16,LOW(16)
000278 ff02      	SBRS R16,2
000279 c006      	RJMP _0x202006A
00027a 7f0b      	ANDI R16,LOW(251)
00027b 934a      	ST   -Y,R20
00027c d085      	RCALL SUBOPT_0x4
00027d 3050      	CPI  R21,0
00027e f009      	BREQ _0x202006B
00027f 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000280 d074      	RCALL SUBOPT_0x2
000281 3050      	CPI  R21,0
000282 f009      	BREQ _0x202006C
000283 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000284 5031      	SUBI R19,LOW(1)
000285 85a8      	LDD  R26,Y+8
000286 85b9      	LDD  R27,Y+8+1
000287 9712      	SBIW R26,2
000288 f008      	BRLO _0x2020059
000289 cfb8      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
00028a ff00      	SBRS R16,0
00028b c007      	RJMP _0x202006D
                 _0x202006E:
00028c 3050      	CPI  R21,0
00028d f029      	BREQ _0x2020070
00028e 5051      	SUBI R21,LOW(1)
00028f e2e0      	LDI  R30,LOW(32)
000290 93ea      	ST   -Y,R30
000291 d070      	RCALL SUBOPT_0x4
000292 cff9      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
000293 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000294 ceea      	RJMP _0x2020016
                 _0x2020018:
000295 85ac      	LDD  R26,Y+12
000296 85bd      	LDD  R27,Y+12+1
000297 91ed      	LD   R30,X+
000298 91fd      	LD   R31,X+
000299 d07f      	RCALL __LOADLOCR6
00029a 9664      	ADIW R28,20
00029b 9508      	RET
                 ; .FEND
                 _put_lcd_G101:
                 ; .FSTART _put_lcd_G101
00029c d077      	RCALL __SAVELOCR4
00029d 018d      	MOVW R16,R26
00029e 813c      	LDD  R19,Y+4
00029f 2fa3      	MOV  R26,R19
0002a0 de95      	RCALL _lcd_putchar
0002a1 01d8      	MOVW R26,R16
0002a2 91ed      	LD   R30,X+
0002a3 91fd      	LD   R31,X+
0002a4 9631      	ADIW R30,1
0002a5 93fe      	ST   -X,R31
0002a6 93ee      	ST   -X,R30
0002a7 d073      	RCALL __LOADLOCR4
0002a8 9625      	ADIW R28,5
0002a9 9508      	RET
                 ; .FEND
                 _lcd_printf:
                 ; .FSTART _lcd_printf
0002aa 92ff      	PUSH R15
0002ab 2ef8      	MOV  R15,R24
0002ac 9726      	SBIW R28,6
0002ad 931a      	ST   -Y,R17
0002ae 930a      	ST   -Y,R16
0002af 01de      	MOVW R26,R28
0002b0 9614      	ADIW R26,4
                +
0002b1 2400     +CLR R0
0002b2 0daf     +ADD R26 , R15
0002b3 1db0     +ADC R27 , R0
                 	__ADDW2R15
0002b4 018d      	MOVW R16,R26
0002b5 e0e0      	LDI  R30,LOW(0)
0002b6 83ec      	STD  Y+4,R30
0002b7 83ed      	STD  Y+4+1,R30
0002b8 83ee      	STD  Y+6,R30
0002b9 83ef      	STD  Y+6+1,R30
0002ba 01de      	MOVW R26,R28
0002bb 9618      	ADIW R26,8
                +
0002bc 2400     +CLR R0
0002bd 0daf     +ADD R26 , R15
0002be 1db0     +ADC R27 , R0
                 	__ADDW2R15
0002bf 91ed      	LD   R30,X+
0002c0 91fd      	LD   R31,X+
0002c1 93fa      	ST   -Y,R31
0002c2 93ea      	ST   -Y,R30
0002c3 931a      	ST   -Y,R17
0002c4 930a      	ST   -Y,R16
0002c5 e9ec      	LDI  R30,LOW(_put_lcd_G101)
0002c6 e0f2      	LDI  R31,HIGH(_put_lcd_G101)
0002c7 93fa      	ST   -Y,R31
0002c8 93ea      	ST   -Y,R30
0002c9 01de      	MOVW R26,R28
0002ca 9618      	ADIW R26,8
0002cb dea8      	RCALL __print_G101
0002cc 8119      	LDD  R17,Y+1
0002cd 8108      	LDD  R16,Y+0
0002ce 9628      	ADIW R28,8
0002cf 90ff      	POP  R15
0002d0 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002d1 93ba      	ST   -Y,R27
0002d2 93aa      	ST   -Y,R26
0002d3 91a9          ld   r26,y+
0002d4 91b9          ld   r27,y+
0002d5 27ee          clr  r30
0002d6 27ff          clr  r31
                 strlen0:
0002d7 916d          ld   r22,x+
0002d8 2366          tst  r22
0002d9 f011          breq strlen1
0002da 9631          adiw r30,1
0002db cffb          rjmp strlen0
                 strlen1:
0002dc 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002dd 93ba      	ST   -Y,R27
0002de 93aa      	ST   -Y,R26
0002df 27aa          clr  r26
0002e0 27bb          clr  r27
0002e1 91e9          ld   r30,y+
0002e2 91f9          ld   r31,y+
                 strlenf0:
0002e3 9005      	lpm  r0,z+
0002e4 2000          tst  r0
0002e5 f011          breq strlenf1
0002e6 9611          adiw r26,1
0002e7 cffb          rjmp strlenf0
                 strlenf1:
0002e8 01fd          movw r30,r26
0002e9 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G100:
000160           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0002ea de22      	RCALL __lcd_write_data
0002eb e0a3      	LDI  R26,LOW(3)
0002ec e0b0      	LDI  R27,0
0002ed c03f      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x1:
0002ee e3a0      	LDI  R26,LOW(48)
0002ef de08      	RCALL __lcd_write_nibble_G100
                +
0002f0 ec88     +LDI R24 , LOW ( 200 )
0002f1 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0002f2 9701     +SBIW R24 , 1
0002f3 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0002f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2:
0002f5 932a      	ST   -Y,R18
0002f6 85ad      	LDD  R26,Y+13
0002f7 85be      	LDD  R27,Y+13+1
0002f8 85ef      	LDD  R30,Y+15
0002f9 89f8      	LDD  R31,Y+15+1
0002fa 9509      	ICALL
0002fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x3:
0002fc 89e8      	LDD  R30,Y+16
0002fd 89f9      	LDD  R31,Y+16+1
0002fe 9734      	SBIW R30,4
0002ff 8be8      	STD  Y+16,R30
000300 8bf9      	STD  Y+16+1,R31
000301 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4:
000302 85ad      	LDD  R26,Y+13
000303 85be      	LDD  R27,Y+13+1
000304 85ef      	LDD  R30,Y+15
000305 89f8      	LDD  R31,Y+15+1
000306 9509      	ICALL
000307 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
000308 89a8      	LDD  R26,Y+16
000309 89b9      	LDD  R27,Y+16+1
00030a 9614      	ADIW R26,4
00030b 91ed      	LD   R30,X+
00030c 91fd      	LD   R31,X+
00030d 83ee      	STD  Y+6,R30
00030e 83ff      	STD  Y+6+1,R31
00030f 81ae      	LDD  R26,Y+6
000310 81bf      	LDD  R27,Y+6+1
000311 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
000312 935a      	ST   -Y,R21
                 __SAVELOCR5:
000313 934a      	ST   -Y,R20
                 __SAVELOCR4:
000314 933a      	ST   -Y,R19
                 __SAVELOCR3:
000315 932a      	ST   -Y,R18
                 __SAVELOCR2:
000316 931a      	ST   -Y,R17
000317 930a      	ST   -Y,R16
000318 9508      	RET
                 
                 __LOADLOCR6:
000319 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00031a 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00031b 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00031c 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00031d 8119      	LDD  R17,Y+1
00031e 8108      	LD   R16,Y
00031f 9508      	RET
                 
                 __ANEGW1:
000320 95f1      	NEG  R31
000321 95e1      	NEG  R30
000322 40f0      	SBCI R31,0
000323 9508      	RET
                 
                 __GETW1PF:
000324 9005      	LPM  R0,Z+
000325 91f4      	LPM  R31,Z
000326 2de0      	MOV  R30,R0
000327 9508      	RET
                 
                 __PUTPARD1:
000328 937a      	ST   -Y,R23
000329 936a      	ST   -Y,R22
00032a 93fa      	ST   -Y,R31
00032b 93ea      	ST   -Y,R30
00032c 9508      	RET
                 
                 _delay_ms:
00032d 9610      	adiw r26,0
00032e f039      	breq __delay_ms1
                 __delay_ms0:
00032f 95a8      	wdr
                +
000330 ed80     +LDI R24 , LOW ( 0x7D0 )
000331 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000332 9701     +SBIW R24 , 1
000333 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000334 9711      	sbiw r26,1
000335 f7c9      	brne __delay_ms0
                 __delay_ms1:
000336 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  13 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  37 r17:  38 r18:  27 r19:  10 r20:   9 r21:  17 r22:  11 r23:   2 
r24:  23 r25:   5 r26:  84 r27:  30 r28:  14 r29:   1 r30: 163 r31:  57 
x  :  21 y  : 151 z  :  14 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   5 
adiw  :  20 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  15 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   0 brne  :  42 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   8 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   8 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   1 cpi   :  43 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   5 inc   :   2 jmp   :  22 ld    :  26 ldd   :  67 ldi   :  91 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  31 movw  :  10 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  10 pop   :   1 push  :   1 rcall :  54 ret   :  34 
reti  :   0 rjmp  :  71 rol   :   0 ror   :   0 sbc   :   2 sbci  :   2 
sbi   :  11 sbic  :   0 sbis  :  12 sbiw  :  18 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  46 std   :  35 sts   :   2 sub   :   1 subi  :  16 swap  :   1 
tst   :   3 wdr   :   1 
Instructions used: 52 out of 116 (44.8%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00066e   1614     32   1646   16384  10.0%
[.dseg] 0x000060 0x000164      0      4      4    1024   0.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
